{"ast":null,"code":"import axios from \"axios\";\nconst DOMAIN = 'http://localhost:8080';\nconst API_DOMAIN = `${DOMAIN}/api`;\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/signIn`;\n_c = SIGN_IN_URL;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/signUp`;\n_c2 = SIGN_UP_URL;\nexport const signInRequest = async requestBody => {\n  try {\n    const response = await axios.post(SIGN_IN_URL(), requestBody);\n    const responseBody = response.data;\n    return responseBody;\n  } catch (error) {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  }\n};\nexport const signUpRequest = async requestBody => {\n  try {\n    const response = await axios.post(SIGN_UP_URL(), requestBody);\n    const responseBody = response.data;\n    return responseBody;\n  } catch (error) {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"SIGN_IN_URL\");\n$RefreshReg$(_c2, \"SIGN_UP_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","SIGN_IN_URL","_c","SIGN_UP_URL","_c2","signInRequest","requestBody","response","post","responseBody","data","error","signUpRequest","$RefreshReg$"],"sources":["/Users/kimminjune/startup_project/WhiskyPedia/front/src/apis/index.ts"],"sourcesContent":["import { SignInRequestDto, SignUpRequestDto } from \"./request/auth\";\nimport axios from \"axios\";\nimport { SignInResponseDto, SignUpResponseDto } from \"./response/auth\";\nimport { ResponseDto } from \"./response\";\n\nconst DOMAIN = 'http://localhost:8080';\n\nconst API_DOMAIN = `${DOMAIN}/api`;\n\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/signIn`;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/signUp`;\n\nexport const signInRequest = async (requestBody: SignInRequestDto) => {\n  try {\n    const response = await axios.post(SIGN_IN_URL(), requestBody);\n    const responseBody: SignInResponseDto = response.data;\n    return responseBody;\n  } catch (error) {\n    if (!error.response.data) return null;\n    const responseBody: ResponseDto = error.response.data;\n    return responseBody;\n  }\n}\n\nexport const signUpRequest = async (requestBody: SignUpRequestDto) => {\n  try {\n    const response = await axios.post(SIGN_UP_URL(), requestBody);\n    const responseBody: SignUpResponseDto = response.data;\n    return responseBody;\n  } catch (error) {\n    if (!error.response.data) return null;\n    const responseBody: ResponseDto = error.response.data;\n    return responseBody;\n  }\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,MAAMC,UAAU,GAAI,GAAED,MAAO,MAAK;AAElC,MAAME,WAAW,GAAGA,CAAA,KAAO,GAAED,UAAW,cAAa;AAACE,EAAA,GAAhDD,WAAW;AACjB,MAAME,WAAW,GAAGA,CAAA,KAAO,GAAEH,UAAW,cAAa;AAACI,GAAA,GAAhDD,WAAW;AAEjB,OAAO,MAAME,aAAa,GAAG,MAAOC,WAA6B,IAAK;EACpE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACP,WAAW,CAAC,CAAC,EAAEK,WAAW,CAAC;IAC7D,MAAMG,YAA+B,GAAGF,QAAQ,CAACG,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,CAACJ,QAAQ,CAACG,IAAI,EAAE,OAAO,IAAI;IACrC,MAAMD,YAAyB,GAAGE,KAAK,CAACJ,QAAQ,CAACG,IAAI;IACrD,OAAOD,YAAY;EACrB;AACF,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,MAAON,WAA6B,IAAK;EACpE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACL,WAAW,CAAC,CAAC,EAAEG,WAAW,CAAC;IAC7D,MAAMG,YAA+B,GAAGF,QAAQ,CAACG,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,CAACJ,QAAQ,CAACG,IAAI,EAAE,OAAO,IAAI;IACrC,MAAMD,YAAyB,GAAGE,KAAK,CAACJ,QAAQ,CAACG,IAAI;IACrD,OAAOD,YAAY;EACrB;AACF,CAAC;AAAA,IAAAP,EAAA,EAAAE,GAAA;AAAAS,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAT,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}