{"ast":null,"code":"var _jsxFileName = \"/Users/kimminjune/startup_project/WhiskyPedia/front/src/components/Auth/RegisterModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../apis/Authorisation';\nimport './auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterModal = ({\n  onClose,\n  onSwitchToSignIn\n}) => {\n  _s();\n  const [userEmail, setEmail] = useState('');\n  const [userName, setUsername] = useState('');\n  const [userPassword, setPassword] = useState('');\n  const [userPwConfirm, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    if (userPassword !== userPwConfirm) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await register({\n        userEmail: userEmail,\n        userName: userName,\n        userPassword: userPassword,\n        userPwConfirm: userPwConfirm\n      });\n      onClose();\n      navigate('/signin'); // Redirect to sign-in page\n    } catch (error) {\n      console.error('Registration failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleRegister();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: userEmail,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userName,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: userPassword,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switch-button\",\n          onClick: onSwitchToSignIn,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterModal, \"l6I1u7axE2LjsC2V75CJGGdxY0M=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterModal;\nexport default RegisterModal;\nvar _c;\n$RefreshReg$(_c, \"RegisterModal\");","map":{"version":3,"names":["React","useState","useNavigate","register","jsxDEV","_jsxDEV","RegisterModal","onClose","onSwitchToSignIn","_s","userEmail","setEmail","userName","setUsername","userPassword","setPassword","userPwConfirm","setConfirmPassword","navigate","handleRegister","alert","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","value","onChange","target","required","confirmPassword","_c","$RefreshReg$"],"sources":["/Users/kimminjune/startup_project/WhiskyPedia/front/src/components/Auth/RegisterModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../apis/Authorisation';\nimport './auth.css';\n\ninterface RegisterModalProps {\n  onClose: () => void;\n  onSwitchToSignIn: () => void;\n}\n\nconst RegisterModal: React.FC<RegisterModalProps> = ({ onClose, onSwitchToSignIn }) => {\n  const [userEmail, setEmail] = useState('');\n  const [userName, setUsername] = useState('');\n  const [userPassword, setPassword] = useState('');\n  const [userPwConfirm, setConfirmPassword] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleRegister = async () => {\n    if (userPassword !== userPwConfirm) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await register({ userEmail: userEmail, userName: userName, userPassword: userPassword, userPwConfirm: userPwConfirm });\n      onClose();\n      navigate('/signin'); // Redirect to sign-in page\n    } catch (error) {\n      console.error('Registration failed', error);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"close-button\" onClick={onClose}>\n          &times;\n        </button>\n        <h2>Create an account</h2>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleRegister();\n          }}\n        >\n          <label>Email address</label>\n          <input\n            type=\"email\"\n            value={userEmail}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <label>Username</label>\n          <input\n            type=\"text\"\n            value={userName}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <label>Password</label>\n          <input\n            type=\"password\"\n            value={userPassword}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n          <button className=\"modal-button\" type=\"submit\">\n            Register\n          </button>\n        </form>\n        <p>\n          Already have an account? <button className=\"switch-button\" onClick={onSwitchToSignIn}>Sign in</button>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpB,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,aAAa,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIL,YAAY,KAAKE,aAAa,EAAE;MAClCI,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IACA,IAAI;MACF,MAAMjB,QAAQ,CAAC;QAAEO,SAAS,EAAEA,SAAS;QAAEE,QAAQ,EAAEA,QAAQ;QAAEE,YAAY,EAAEA,YAAY;QAAEE,aAAa,EAAEA;MAAc,CAAC,CAAC;MACtHT,OAAO,CAAC,CAAC;MACTW,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BnB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BnB,OAAA;QAAQkB,SAAS,EAAC,cAAc;QAACE,OAAO,EAAElB,OAAQ;QAAAiB,QAAA,EAAC;MAEnD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxB,OAAA;QAAAmB,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BxB,OAAA;QACEyB,QAAQ,EAAGC,CAAC,IAAK;UACfA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClBb,cAAc,CAAC,CAAC;QAClB,CAAE;QAAAK,QAAA,gBAEFnB,OAAA;UAAAmB,QAAA,EAAO;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BxB,OAAA;UACE4B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAExB,SAAU;UACjByB,QAAQ,EAAGJ,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxB,OAAA;UAAAmB,QAAA,EAAO;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBxB,OAAA;UACE4B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtB,QAAS;UAChBuB,QAAQ,EAAGJ,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxB,OAAA;UAAAmB,QAAA,EAAO;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBxB,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEpB,YAAa;UACpBqB,QAAQ,EAAGJ,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxB,OAAA;UAAAmB,QAAA,EAAO;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BxB,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEI,eAAgB;UACvBH,QAAQ,EAAGJ,CAAC,IAAKd,kBAAkB,CAACc,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxB,OAAA;UAAQkB,SAAS,EAAC,cAAc;UAACU,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAE/C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPxB,OAAA;QAAAmB,QAAA,GAAG,2BACwB,eAAAnB,OAAA;UAAQkB,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEjB,gBAAiB;UAAAgB,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzEIH,aAA2C;EAAA,QAM9BJ,WAAW;AAAA;AAAAqC,EAAA,GANxBjC,aAA2C;AA2EjD,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}