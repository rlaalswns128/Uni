{"ast":null,"code":"var _jsxFileName = \"/Users/kimminjune/startup_project/WhiskyPedia/front/src/components/Auth/RegisterModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../apis/Authorisation';\nimport './auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterModal = ({\n  onClose,\n  onSwitchToSignIn\n}) => {\n  _s();\n  const [userEmail, setEmail] = useState('');\n  const [userName, setUsername] = useState('');\n  const [userPassword, setPassword] = useState('');\n  const [userPwConfirm, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null); // Add state for error message\n\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    setError(null); // Clear any existing errors\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await register({\n        userEmail: email,\n        userName: username,\n        userPassword: password,\n        userPwConfirm: confirmPassword\n      });\n      if (response.ok) {\n        onClose();\n        navigate('/signin'); // Redirect to sign-in page\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Registration failed'); // Set error message from server response\n      }\n    } catch (error) {\n      console.error('Registration failed', error);\n      setError('An error occurred during registration. Please try again.'); // Set generic error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleRegister();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: userEmail,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userName,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: userPassword,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: userPwConfirm,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switch-button\",\n          onClick: onSwitchToSignIn,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterModal, \"i2ohbkFetZaXUmnYVJz5O2fpoX4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterModal;\nexport default RegisterModal;\nvar _c;\n$RefreshReg$(_c, \"RegisterModal\");","map":{"version":3,"names":["React","useState","useNavigate","register","jsxDEV","_jsxDEV","RegisterModal","onClose","onSwitchToSignIn","_s","userEmail","setEmail","userName","setUsername","userPassword","setPassword","userPwConfirm","setConfirmPassword","error","setError","navigate","handleRegister","password","confirmPassword","response","email","username","ok","data","json","message","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/kimminjune/startup_project/WhiskyPedia/front/src/components/Auth/RegisterModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../apis/Authorisation';\nimport './auth.css';\n\ninterface RegisterModalProps {\n  onClose: () => void;\n  onSwitchToSignIn: () => void;\n}\n\nconst RegisterModal: React.FC<RegisterModalProps> = ({ onClose, onSwitchToSignIn }) => {\n  const [userEmail, setEmail] = useState('');\n  const [userName, setUsername] = useState('');\n  const [userPassword, setPassword] = useState('');\n  const [userPwConfirm, setConfirmPassword] = useState('');\n  const [error, setError] = useState<string | null>(null); // Add state for error message\n\n  const navigate = useNavigate();\n\n  const handleRegister = async () => {\n    setError(null); // Clear any existing errors\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await register({\n        userEmail: email,\n        userName: username,\n        userPassword: password,\n        userPwConfirm: confirmPassword,\n      });\n      if (response.ok) {\n        onClose();\n        navigate('/signin'); // Redirect to sign-in page\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Registration failed'); // Set error message from server response\n      }\n    } catch (error) {\n      console.error('Registration failed', error);\n      setError('An error occurred during registration. Please try again.'); // Set generic error message\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"close-button\" onClick={onClose}>\n          &times;\n        </button>\n        <h2>Create an account</h2>\n        {error && <p className=\"error-message\">{error}</p>} {/* Conditionally render error message */}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleRegister();\n          }}\n        >\n          <label>Email address</label>\n          <input\n            type=\"email\"\n            value={userEmail}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <label>Username</label>\n          <input\n            type=\"text\"\n            value={userName}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <label>Password</label>\n          <input\n            type=\"password\"\n            value={userPassword}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            value={userPwConfirm}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n          <button className=\"modal-button\" type=\"submit\">\n            Register\n          </button>\n        </form>\n        <p>\n          Already have an account? <button className=\"switch-button\" onClick={onSwitchToSignIn}>Sign in</button>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}